<UserControl x:Class="cgwo.Views.CardLayoutDesigner"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cogs="clr-namespace:cgwo.Views"
             xmlns:ctrl="clr-namespace:cgwo.Controls"
             xmlns:xcd="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:des="clr-namespace:Cogs.Designer"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:gb="clr-namespace:GorgleDevs.Wpf.Behaviours;assembly=GorgleDevs.Wpf"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <des:DesignerElementFactoryConverter x:Key="elementFactory"/>
        <sys:String x:Key="Text">Text</sys:String>
        <sys:String x:Key="Rectangle">Rectangle</sys:String>
        <sys:String x:Key="Ellipse">Ellipse</sys:String>
        <sys:String x:Key="Image">Image</sys:String>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Popup IsOpen="True" Placement="Absolute" PlacementRectangle="0,0,300,400">
            <Grid Background="LightSteelBlue"/>
        </Popup>
        <Grid>
            <Border x:Name="Designer" BorderBrush="Black" Background="{Binding Background}" BorderThickness="2" CornerRadius="5" Width="250" Height="350">
                <i:Interaction.Behaviors>
                    <gb:DropBehavior DropCommand="{Binding AddElement}" Converter="{StaticResource elementFactory}"/>
                    <gb:KeyPreviewBehaviour Key="Delete" Command="{Binding DeleteCommand}"/>
                </i:Interaction.Behaviors>
                <ctrl:DesignerCanvas Elements="{Binding Elements}" SelectedElement="{Binding SelectedElement, Mode=TwoWay}" Width="250" Height="350">
                    <ctrl:DesignerCanvas.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding DeleteItem}"/>
                    </ctrl:DesignerCanvas.InputBindings>
                </ctrl:DesignerCanvas>
            </Border>

            <StackPanel Orientation="Vertical" Margin="3" HorizontalAlignment="Left" VerticalAlignment="Top">
                <DockPanel LastChildFill="False" Margin="2">
                    <i:Interaction.Behaviors>
                        <gb:DoubleClickBehaviour Command="{Binding AddElement}" CommandParameter="{Binding Source={StaticResource Text}, Converter={StaticResource elementFactory}}"/>
                        <gb:DragBehaviour DragData="Text" CanDrag="True"/>
                    </i:Interaction.Behaviors>
                    <Grid DockPanel.Dock="Left" Width="3" Background="Black"></Grid>
                    <Grid DockPanel.Dock="Left" Background="LightGray" Width="28" Height="28">
                        <Image Source="/Resources/Images/ToolButtons/text.png" Width="20" Height="20"/>
                    </Grid>
                    <Grid DockPanel.Dock="Left" Background="DarkGray" Height="28" Width="64">
                        <TextBlock Margin="3" VerticalAlignment="Center">Text</TextBlock>
                    </Grid>
                </DockPanel>
                <DockPanel LastChildFill="False" Margin="2">
                    <i:Interaction.Behaviors>
                        <gb:DoubleClickBehaviour Command="{Binding AddElement}" CommandParameter="{Binding Source={StaticResource Rectangle}, Converter={StaticResource elementFactory}}"/>
                        <gb:DragBehaviour DragData="Rectangle" CanDrag="True"/>
                    </i:Interaction.Behaviors>
                    <Grid DockPanel.Dock="Left" Width="3" Background="Black"></Grid>
                    <Grid DockPanel.Dock="Left" Background="LightGray" Width="28" Height="28">
                        <Border Width="18" Height="16" BorderBrush="Black" BorderThickness="2"/>
                    </Grid>
                    <Grid DockPanel.Dock="Left" Background="DarkGray" Height="28" Width="64">
                        <TextBlock Margin="3" VerticalAlignment="Center">Rectangle</TextBlock>
                    </Grid>
                </DockPanel>
                <DockPanel LastChildFill="False" Margin="2">
                    <i:Interaction.Behaviors>
                        <gb:DoubleClickBehaviour Command="{Binding AddElement}" CommandParameter="{Binding Source={StaticResource Ellipse}, Converter={StaticResource elementFactory}}"/>
                        <gb:DragBehaviour DragData="Ellipse" CanDrag="True"/>
                    </i:Interaction.Behaviors>
                    <Grid DockPanel.Dock="Left" Width="3" Background="Black"></Grid>
                    <Grid DockPanel.Dock="Left" Background="LightGray" Width="28" Height="28">
                        <Ellipse Width="18" Height="16" Stroke="Black" StrokeThickness="2" Fill="Transparent"/>
                    </Grid>
                    <Grid DockPanel.Dock="Left" Background="DarkGray" Height="28" Width="64">
                        <TextBlock Margin="3" VerticalAlignment="Center">Ellipse</TextBlock>
                    </Grid>
                </DockPanel>
                <DockPanel LastChildFill="False" Margin="2">
                    <i:Interaction.Behaviors>
                        <gb:DoubleClickBehaviour Command="{Binding AddElement}" CommandParameter="{Binding Source={StaticResource Image}, Converter={StaticResource elementFactory}}"/>
                        <gb:DragBehaviour DragData="Image" CanDrag="True"/>
                    </i:Interaction.Behaviors>
                    <Grid DockPanel.Dock="Left" Width="3" Background="Black"></Grid>
                    <Grid DockPanel.Dock="Left" Background="LightGray" Width="28" Height="28">
                        <Rectangle Width="18" Height="16" Stroke="Black" StrokeThickness="2" Fill="Transparent"/>
                        <Ellipse Width="18" Height="16" Stroke="Black" StrokeThickness="2" Fill="Transparent"/>
                    </Grid>
                    <Grid DockPanel.Dock="Left" Background="DarkGray" Height="28" Width="64">
                        <TextBlock Margin="3" VerticalAlignment="Center">Image</TextBlock>
                    </Grid>
                </DockPanel>
            </StackPanel>
        </Grid>
        <DockPanel Grid.Column="1" LastChildFill="False">
            <Border DockPanel.Dock="Top" BorderThickness="0,0,0,1" BorderBrush="Gray" Margin="5">
                <TextBlock Margin="3" FontSize="14">Card Properties</TextBlock>
            </Border>
            <Grid DockPanel.Dock="Top" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Margin="3">Background Colour</TextBlock>
                <xcd:ColorPicker Grid.Column="1" Width="120" Margin="3" SelectedColor="{Binding BackgroundColor}"/>
                <TextBlock Margin="3" Grid.Row="1">Background Image</TextBlock>
                <ctrl:ImagePicker Width="120" Height="120" Grid.Row="1" Grid.Column="1" ImageSource="{Binding BackgroundImage, Mode=TwoWay}"/>
            </Grid>
            <Border DockPanel.Dock="Top" BorderThickness="0,0,0,1" BorderBrush="Gray" Margin="5">
                <TextBlock Margin="3" FontSize="14">Element Properties</TextBlock>
            </Border>
            <ContentControl Content="{Binding SelectedElement}" DockPanel.Dock="Top">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type des:TextElement}">
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Margin="3">Text</TextBlock>
                            <TextBox Grid.Column="1" Margin="3" HorizontalAlignment="Stretch" Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" Width="120"/>
                            <TextBlock Margin="3" Grid.Row="1">Text Color</TextBlock>
                            <xcd:ColorPicker Grid.Row="1" Grid.Column="1" Margin="3" SelectedColor="{Binding TextColor}"/>
                            <TextBlock Margin="3" Grid.Row="2">Text Size</TextBlock>
                            <xcd:DoubleUpDown Grid.Row="2" Grid.Column="1" Value="{Binding TextSize}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type des:RectangleElement}">
                        <Grid DockPanel.Dock="Top" Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Margin="3">Background</TextBlock>
                            <xcd:ColorPicker Grid.Column="1" Margin="3" SelectedColor="{Binding BackgroundColor}"/>
                            <TextBlock Grid.Row="1" Margin="3">Border</TextBlock>
                            <xcd:ColorPicker Grid.Row="1" Grid.Column="1" Margin="3" SelectedColor="{Binding BorderColor}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type des:EllipseElement}">
                        <Grid DockPanel.Dock="Top" Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Margin="3">Background</TextBlock>
                            <xcd:ColorPicker Grid.Column="1" Margin="3" SelectedColor="{Binding BackgroundColor}"/>
                            <TextBlock Grid.Row="1" Margin="3">Border</TextBlock>
                            <xcd:ColorPicker Grid.Row="1" Grid.Column="1" Margin="3" SelectedColor="{Binding BorderColor}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type des:ImageElement}">
                        <Grid DockPanel.Dock="Top" Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Margin="3">Image</TextBlock>
                            <Grid Background="Transparent" Width="120" Height="120" Grid.Column="1">
                                <Image Source="{Binding ImageSource}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Uniform"/>
                                <Button Padding="3" Height="22" Width="96" Content="Choose image..." Command="{Binding DataContext.SelectImage, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}}" Value="False">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
            <Border DockPanel.Dock="Top" BorderThickness="0,0,0,1" BorderBrush="Gray" Margin="5">
                <TextBlock Margin="3" FontSize="14">Layout</TextBlock>
            </Border>
            <Grid Margin="5" DockPanel.Dock="Top" DataContext="{Binding SelectedElement}">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Margin="3">Left</TextBlock>
                <xcd:DoubleUpDown Grid.Column="1" Value="{Binding Left}"/>
                <TextBlock Margin="3" Grid.Row="1">Top</TextBlock>
                <xcd:DoubleUpDown Grid.Row="1" Grid.Column="1" Value="{Binding Top}"/>
                <TextBlock Margin="3" Grid.Row="2">Width</TextBlock>
                <xcd:DoubleUpDown Grid.Row="2" Grid.Column="1" Value="{Binding Width}"/>
                <TextBlock Grid.Row="3" Margin="3">Height</TextBlock>
                <xcd:DoubleUpDown Grid.Row="3" Grid.Column="1" Value="{Binding Height}"/>
                <UniformGrid Columns="2" Rows="2" Grid.Row="4" Grid.ColumnSpan="2" Margin="5">
                    <Button Margin="3" Command="{Binding SendToBack}">Send to back</Button>
                    <Button Margin="3" Command="{Binding SendBackwards}">Send backwards</Button>
                    <Button Margin="3" Command="{Binding BringForwards}">Bring forwards</Button>
                    <Button Margin="3" Command="{Binding BringToFront}">Bring to front</Button>
                </UniformGrid>
            </Grid>
            <Border DockPanel.Dock="Top" BorderThickness="0,0,0,1" BorderBrush="Gray" Margin="5">
                <TextBlock Margin="3" FontSize="14">Actions</TextBlock>
            </Border>
            <UniformGrid Columns="2" Rows="2" Margin="5" DockPanel.Dock="Top">
                <Button Margin="3" Command="{Binding DeleteCommand}">Delete</Button>
                <Button Margin="3" Command="{Binding ReloadCommand}">Reload</Button>
                <Button Margin="3" Command="{Binding SaveLayoutCommand}">Save Layout</Button>
                <Button Margin="3" Command="{Binding SaveImageCommand}">Save Image</Button>
            </UniformGrid>
        </DockPanel>
    </Grid>
</UserControl>
